image: docker:latest

services:
  - docker:dind

stages:
  - .pre
  - lint
  - test
  - build
  - pages

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  CI_REGISTRY: gitlab.fi.muni.cz:5050
  CI_REGISTRY_IMAGE: gitlab.fi.muni.cz:5050/xfischer/sensitive-desktop
  # Add timestamp variable for tags
  TIMESTAMP: $(date +%Y%m%d-%H%M%S)
  # Cache directory
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"

# template, still hidden
.cache-warmup-template:
  stage: .pre
  tags:
  - shared-fi
  image: python:3.11-slim
  before_script:
    - apt-get update -qq && apt-get install -y --no-install-recommends git
    - mkdir -p .cache/pip .cache/pre-commit
    - python -m pip install --cache-dir .cache/pip --upgrade pip pre-commit
  script:
    - pre-commit install-hooks
  cache:
    key: pre-commit-cache-$CI_COMMIT_REF_SLUG
    paths:
      - .cache/pip
      - .cache/pre-commit
    policy: pull-push
  only:
    - master
    - merge_requests

# real job
cache-warmup:
  extends: .cache-warmup-template

pre-commit:
  stage: lint
  tags:
    - shared-fi
  image: python:3.11-slim
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"
  cache:
    key: pre-commit-cache-$CI_COMMIT_REF_SLUG
    paths:
      - .cache/pip
      - .cache/pre-commit
    policy: pull-push
  before_script:
    - apt-get update && apt-get install -y git
    # Create cache directories to prevent warnings
    - mkdir -p .cache/pip .cache/pre-commit desktop-manager-api/.pytest_cache/ app/.pytest_cache/ app/.sass-cache/
    # Install pre-commit and dependencies
    - pip install --cache-dir=$PIP_CACHE_DIR pre-commit
    - pip install --cache-dir=$PIP_CACHE_DIR pytest fakeredis pytest-cov pytest-mock pytest-flask pytest-asyncio pytest-env responses freezegun sqlalchemy-utils libsass
    # Install dependencies directly
    - cd desktop-manager-api && pip install --cache-dir=$PIP_CACHE_DIR -e . || true
    - cd ../app && pip install --cache-dir=$PIP_CACHE_DIR -e . || true
    - cd ..
  script:
    - pre-commit run --all-files --show-diff-on-failure || echo "Pre-commit check failed, but pipeline will continue"
  allow_failure: false
  only:
    - merge_requests
    - master
    - tags

.kaniko:
  image:
    name: gcr.io/kaniko-project/executor:v1.15.0-debug
    entrypoint: [""]
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD | base64)\"}}}" > /kaniko/.docker/config.json
    - export IMAGE_TAG="$(date +%Y%m%d-%H%M%S)-${CI_PIPELINE_ID}"

build-guac-no-root:
  extends: .kaniko
  stage: build
  tags:
    - shared-fi
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/guacamole-helm/docker/guac-no-root"
      --dockerfile "${CI_PROJECT_DIR}/guacamole-helm/docker/guac-no-root/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/guac-no-root:latest"
      --destination "${CI_REGISTRY_IMAGE}/guac-no-root:${IMAGE_TAG}"
  only:
    changes:
      - guacamole-helm/docker/guac-no-root/**/*
    refs:
      - master


build-desktop-manager-api:
  extends: .kaniko
  stage: build
  tags:
    - shared-fi
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/desktop-manager-api"
      --dockerfile "${CI_PROJECT_DIR}/desktop-manager-api/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/desktop-manager-api:latest"
      --destination "${CI_REGISTRY_IMAGE}/desktop-manager-api:${IMAGE_TAG}"
  only:
    changes:
      - desktop-manager-api/**/*
    refs:
      - master

build-desktop-manager-frontend:
  extends: .kaniko
  stage: build
  tags:
    - shared-fi
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/app"
      --dockerfile "${CI_PROJECT_DIR}/app/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/desktop-manager-frontend:latest"
      --destination "${CI_REGISTRY_IMAGE}/desktop-manager-frontend:${IMAGE_TAG}"
  only:
    changes:
      - app/**/*
    refs:
      - master

.coverage-job: &coverage_job
  stage: test
  image: python:3.11-slim
  tags:
    - shared-fi
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:                   # re-use the global pip cache
    key: pip-cache-$CI_COMMIT_REF_SLUG
    paths:
      - .cache/pip
    policy: pull-push
  before_script:
    - mkdir -p $PIP_CACHE_DIR
    - python -m pip install --cache-dir=$PIP_CACHE_DIR --upgrade pip
  artifacts:
    expire_in: 1 week
    paths:
      - $HTMLCOV_DIR
      - $COVERAGE_XML
    reports:
      coverage_report:       # MR diff annotations (optional)
        coverage_format: cobertura
        path: $COVERAGE_XML
  coverage: '/TOTAL.*\s+(\d+%)/'   # pulls % into pipeline UI

test_app:
  <<: *coverage_job
  variables:
    PROJ_DIR: "app"
    HTMLCOV_DIR: "htmlcov_app"
    COVERAGE_XML: "coverage_app.xml"
  script:
    - cd "$PROJ_DIR"
    - pip install --cache-dir=$PIP_CACHE_DIR -e ".[test]"
    - pytest --cov=. --cov-report=xml:../$COVERAGE_XML --cov-report=html
    - mv htmlcov ../$HTMLCOV_DIR

test_api:
  <<: *coverage_job
  variables:
    PROJ_DIR: "desktop-manager-api"
    HTMLCOV_DIR: "htmlcov_api"
    COVERAGE_XML: "coverage_api.xml"
  script:
    - cd "$PROJ_DIR"
    - pip install --cache-dir=$PIP_CACHE_DIR -e ".[test]"
    - pytest --cov=. --cov-report=xml:../$COVERAGE_XML --cov-report=html
    - mv htmlcov ../$HTMLCOV_DIR

# ---------------------------------------------------------------------------
# Publish both reports on GitLab Pages
# ---------------------------------------------------------------------------
pages:
  stage: pages
  needs:                   # download artifacts from both test jobs
    - job: test_app
      artifacts: true
    - job: test_api
      artifacts: true
  script: |
    mkdir -p public/app public/api
    mv htmlcov_app public/app/htmlcov
    mv htmlcov_api public/api/htmlcov
    # simple landing page
    cat > public/index.html <<'EOF'
    <h1>Coverage reports</h1>
    <ul>
      <li><a href="app/htmlcov/index.html">App</a></li>
      <li><a href="api/htmlcov/index.html">Desktop-Manager-API</a></li>
    </ul>
    EOF
  artifacts:
    paths:
      - public
  only:
    - master
