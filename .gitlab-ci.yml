image: docker:latest

services:
  - docker:dind

stages:
  - lint
  - build

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  CI_REGISTRY: gitlab.fi.muni.cz:5050
  CI_REGISTRY_IMAGE: gitlab.fi.muni.cz:5050/xfischer/sensitive-desktop
  # Add timestamp variable for tags
  TIMESTAMP: $(date +%Y%m%d-%H%M%S)

# Global cache config
cache:
  paths:
    - .cache/pip

pre-commit:
  stage: lint
  tags:
    - shared-fi
  image: python:3.11-slim
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"
  cache:
    key: pre-commit-cache-$CI_COMMIT_REF_SLUG
    paths:
      - .cache/pip
      - .cache/pre-commit
      - desktop-manager-api/.pytest_cache/
      - app/.pytest_cache/
      - app/.sass-cache/
    policy: pull-push
  before_script:
    - apt-get update && apt-get install -y git
    # Only install packages if cache was not restored
    - if [ ! -d "$PRE_COMMIT_HOME" ]; then
        pip install --no-cache-dir pre-commit;
        pip install --no-cache-dir pytest fakeredis pytest-cov pytest-mock pytest-flask pytest-asyncio pytest-env responses freezegun sqlalchemy-utils libsass;
      else
        echo "Using cached pre-commit installation";
      fi
    # Install dependencies directly instead of relying on -e installs
    - cd desktop-manager-api && pip install -e . || true
    - cd ../app && pip install -e . || true
    - cd ..
  script:
    - pre-commit run --all-files --show-diff-on-failure --parallel || echo "Pre-commit check failed, but pipeline will continue"
  allow_failure: true
  only:
    - merge_requests
    - master
    - tags

.kaniko:
  image:
    name: gcr.io/kaniko-project/executor:v1.15.0-debug
    entrypoint: [""]
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD | base64)\"}}}" > /kaniko/.docker/config.json
    - export IMAGE_TAG="$(date +%Y%m%d-%H%M%S)-${CI_PIPELINE_ID}"

build-guac-no-root:
  extends: .kaniko
  stage: build
  tags:
    - shared-fi
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/guacamole-helm/docker/guac-no-root"
      --dockerfile "${CI_PROJECT_DIR}/guacamole-helm/docker/guac-no-root/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/guac-no-root:latest"
      --destination "${CI_REGISTRY_IMAGE}/guac-no-root:${IMAGE_TAG}"
  only:
    changes:
      - guacamole-helm/docker/guac-no-root/**/*
    refs:
      - master


build-desktop-manager-api:
  extends: .kaniko
  stage: build
  tags:
    - shared-fi
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/desktop-manager-api"
      --dockerfile "${CI_PROJECT_DIR}/desktop-manager-api/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/desktop-manager-api:latest"
      --destination "${CI_REGISTRY_IMAGE}/desktop-manager-api:${IMAGE_TAG}"
  only:
    changes:
      - desktop-manager-api/**/*
    refs:
      - master

build-desktop-manager-frontend:
  extends: .kaniko
  stage: build
  tags:
    - shared-fi
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/app"
      --dockerfile "${CI_PROJECT_DIR}/app/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/desktop-manager-frontend:latest"
      --destination "${CI_REGISTRY_IMAGE}/desktop-manager-frontend:${IMAGE_TAG}"
  only:
    changes:
      - app/**/*
    refs:
      - master
