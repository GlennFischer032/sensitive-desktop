// Form container
.form-container {
  @include container(800px);
  padding: $spacing-xl;
}

// Standard form layout
.standard-form {
  @include flex(column);
  gap: $spacing-lg;
  max-width: 100%;

  // Section headings within forms
  .form-section-title {
    font-size: $font-size-lg;
    font-weight: $font-weight-medium;
    color: $text-dark;
    margin-top: $spacing-xl;
    margin-bottom: $spacing-md;
    padding-bottom: $spacing-xs;
    border-bottom: 1px solid $border-color;
  }

  .form-section {
    @include flex(column);
    gap: $spacing-md;
    margin-bottom: $spacing-lg;
  }
}

// Form group
.form-group {
  margin-bottom: $spacing-lg;

  label {
    display: block;
    margin-bottom: $spacing-sm;
    color: $text-dark;
    font-weight: $font-weight-medium;

    &.required:after {
      content: " *";
      color: $danger-color;
    }
  }

  // Form inputs
  input,
  select,
  textarea {
    @include form-control;
  }

  // Textarea
  textarea {
    min-height: 100px;
    resize: vertical;
  }
}

// Validation states
.form-group {
  &.has-error {
    input,
    select,
    textarea {
      border-color: $danger-color;
      background-color: rgba($danger-color, 0.05);
    }

    .error-message {
      display: block;
      color: $danger-color;
      font-size: $font-size-sm;
      margin-top: $spacing-xs;
    }
  }

  &.has-success {
    input,
    select,
    textarea {
      border-color: $success-color;
      background-color: rgba($success-color, 0.05);
    }
  }
}

// Form helper text
.form-text,
.form-help {
  display: block;
  margin-top: $spacing-xs;
  font-size: $font-size-sm;
  color: $text-light;
}

// Form row (horizontal layout)
.form-row {
  @include flex(row, flex-start, stretch, nowrap);
  gap: $spacing-lg;
  margin-bottom: $spacing-lg;

  .form-group {
    flex: 1;
    margin-bottom: 0;
  }

  @include respond-to(sm) {
    flex-direction: column;
    gap: $spacing-md;
  }
}

// Checkbox and radio styles
.checkbox-wrapper,
.radio-wrapper {
  margin-bottom: $spacing-md;
}

.checkbox-label,
.radio-label {
  @include flex(row, flex-start, flex-start);
  font-weight: $font-weight-normal;
  cursor: pointer;
  margin-bottom: $spacing-sm;

  input[type="checkbox"],
  input[type="radio"] {
    margin-right: $spacing-sm;
    margin-top: 3px;
    width: 16px;
    height: 16px;
    cursor: pointer;
    flex-shrink: 0;
  }
}

// Form actions
.form-actions {
  @include flex(row, flex-start, center);
  gap: $spacing-md;
  margin-top: $spacing-xl;
  padding-top: $spacing-lg;
  border-top: 1px solid $border-color-light;

  // Primary/secondary button styling
  .button.primary {
    order: 1;
  }

  .button.secondary {
    order: 2;
  }

  @include respond-to(sm) {
    flex-direction: column;
    width: 100%;

    .button {
      width: 100%;
    }

    // Reverse order on mobile to prioritize primary action
    .button.primary {
      order: 1;
    }

    .button.secondary {
      order: 2;
    }
  }
}

// Special input layouts
.size-input-container {
  @include flex(row, flex-start, center);
  gap: $spacing-md;

  input[type="number"] {
    flex: 1;
    min-width: 80px;
  }

  select {
    width: 150px;
  }

  @include respond-to(sm) {
    flex-direction: row;

    input[type="number"],
    select {
      flex: 1;
    }
  }
}

// Form group inline
.form-group-inline {
  @include flex(row, flex-start, center);
  gap: $spacing-md;

  label {
    margin-bottom: 0;
    min-width: 100px;
  }

  @include respond-to(sm) {
    flex-direction: column;
    align-items: flex-start;

    label {
      margin-bottom: $spacing-xs;
      min-width: auto;
    }
  }
}

// Login form
.login-form {
  @include flex(column);
  gap: $spacing-md;
  max-width: 450px;
  margin: 0 auto;

  .form-group {
    @include flex(column);
    gap: $spacing-sm;
  }

  .button-container {
    text-align: center;
    margin-top: $spacing-lg;
  }
}

// Input with icon
.input-with-icon {
  position: relative;

  input {
    padding-left: $spacing-xl;
  }

  .input-icon {
    position: absolute;
    left: $spacing-sm;
    top: 50%;
    transform: translateY(-50%);
    color: $text-light;
  }
}

// Input sizes
.input-sm {
  padding: $spacing-xs $spacing-sm;
  font-size: $font-size-sm;
}

.input-lg {
  padding: $spacing-sm $spacing-md;
  font-size: $font-size-lg;
}

// Form grid layout for inputs with varying widths
.form-grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: $spacing-md;
  margin-bottom: $spacing-lg;

  .col-1 { grid-column: span 1; }
  .col-2 { grid-column: span 2; }
  .col-3 { grid-column: span 3; }
  .col-4 { grid-column: span 4; }
  .col-5 { grid-column: span 5; }
  .col-6 { grid-column: span 6; }
  .col-7 { grid-column: span 7; }
  .col-8 { grid-column: span 8; }
  .col-9 { grid-column: span 9; }
  .col-10 { grid-column: span 10; }
  .col-11 { grid-column: span 11; }
  .col-12 { grid-column: span 12; }

  @include respond-to(sm) {
    grid-template-columns: 1fr;

    .col-1, .col-2, .col-3, .col-4, .col-5, .col-6,
    .col-7, .col-8, .col-9, .col-10, .col-11, .col-12 {
      grid-column: 1;
    }
  }
}

// Search form
.search-form {
  @include flex(row, flex-start, center);
  gap: $spacing-md;
  margin-bottom: $spacing-lg;

  .search-input {
    flex: 1;
    position: relative;

    input {
      padding-left: $spacing-xl;
      height: 42px;
    }

    .search-icon {
      position: absolute;
      left: $spacing-sm;
      top: 50%;
      transform: translateY(-50%);
      color: $text-light;
    }
  }

  .search-button {
    height: 42px;
  }

  @include respond-to(sm) {
    flex-direction: column;
    align-items: stretch;

    .search-button {
      width: 100%;
    }
  }
}

// Form validation messages
.validation-message {
  font-size: $font-size-sm;
  margin-top: $spacing-xs;

  &.error {
    color: $danger-color;
  }

  &.success {
    color: $success-color;
  }

  &.warning {
    color: $warning-color;
  }
}

// Required field indicator at form top
.required-field-note {
  font-size: $font-size-sm;
  color: $text-light;
  margin-bottom: $spacing-lg;

  span {
    color: $danger-color;
  }
}
