// Notification container
.notification-container {
  position: fixed;
  top: $spacing-lg;
  right: $spacing-lg;
  z-index: $z-index-tooltip;
  max-width: 350px;
  width: 100%;
  pointer-events: none;
}

// Base notification
.notification {
  @include card($spacing-md, $bg-white, 2);
  position: relative;
  margin-bottom: $spacing-md;
  transform: translateX(100%);
  opacity: 0;
  animation: slideIn $transition-medium ease forwards;
  transition: opacity $transition-medium ease, transform $transition-medium ease;
  padding-right: $spacing-xl + $spacing-md;
  pointer-events: auto;
  border-left-width: 4px;
  border-left-style: solid;

  // Style variants based on notification type
  &.success {
    border-left-color: $success-color;
    color: $success-dark;
  }

  &.error {
    border-left-color: $danger-color;
    color: $danger-dark;
  }

  &.warning {
    border-left-color: $warning-color;
    color: $warning-dark;
  }

  &.info {
    border-left-color: $info-color;
    color: $info-dark;
  }
}

// Notification close button
.notification-close {
  position: absolute;
  top: $spacing-sm;
  right: $spacing-sm;
  width: 20px;
  height: 20px;
  opacity: 0.5;
  cursor: pointer;
  transition: opacity $transition-fast;

  &:hover {
    opacity: 1;
  }

  &:before,
  &:after {
    content: '';
    position: absolute;
    width: 2px;
    height: 20px;
    background-color: $text-color;
    top: 0;
    left: 9px;
  }

  &:before {
    transform: rotate(45deg);
  }

  &:after {
    transform: rotate(-45deg);
  }
}

// Messages and alerts
.message {
  padding: $spacing-md;
  margin: $spacing-md 0;
  border-radius: $border-radius;
  border-left-width: 4px;
  border-left-style: solid;

  &.success {
    background-color: rgba($success-color, 0.1);
    border-color: $success-color;
    color: $success-dark;
  }

  &.error {
    background-color: rgba($danger-color, 0.1);
    border-color: $danger-color;
    color: $danger-dark;
  }

  &.warning {
    background-color: rgba($warning-color, 0.1);
    border-color: $warning-color;
    color: $warning-dark;
  }

  &.info {
    background-color: rgba($info-color, 0.1);
    border-color: $info-color;
    color: $info-dark;
  }

  // Default style when no variant is specified
  &:not(.success):not(.error):not(.warning):not(.info) {
    background-color: $bg-light;
    border-left-color: $border-color-dark;
    color: $text-color;
  }
}

// Status badges
.status-badge {
  @include badge;

  &.success {
    @include badge($success-color);
  }

  &.danger, &.error {
    @include badge($danger-color);
  }

  &.warning {
    @include badge($warning-color);
  }

  &.info {
    @include badge($info-color);
  }

  &.secondary {
    @include badge($secondary-color);
  }
}

// Toast-style notifications
.toast {
  @extend .notification;
  box-shadow: $shadow-lg;
  max-width: 300px;
  border-radius: $border-radius-lg;
  padding: $spacing-sm $spacing-md;
  font-size: $font-size-sm;

  .toast-title {
    font-weight: $font-weight-bold;
    margin-bottom: $spacing-xs;
  }

  .toast-body {
    opacity: 0.9;
  }
}

// Error text helper
.error-text {
  color: $danger-color;
  font-style: italic;
  font-size: $font-size-sm;
}

// Loading text helper
.loading-text {
  text-align: center;
  margin-top: $spacing-md;
  color: $primary-color;
  font-style: italic;
  animation: fade 1.5s infinite;
}

// Slide-in animation
@keyframes slideIn {
  0% {
    opacity: 0;
    transform: translateX(100%);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

// Fade animation
@keyframes fade {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}
