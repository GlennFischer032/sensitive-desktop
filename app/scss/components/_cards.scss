// Base Card Component
.card {
  @include card($spacing-md, $bg-white, 1);
  margin-bottom: $spacing-lg;

  &__header {
    margin-bottom: $spacing-md;

    h1, h2, h3, h4, h5, h6 {
      margin-top: 0;
      color: $text-dark;
      font-weight: $font-weight-medium;
    }
  }

  &__body {
    margin-bottom: $spacing-md;
  }

  &__footer {
    @include flex(row, flex-end, center);
    gap: $spacing-sm;
    margin-top: $spacing-md;
  }

  // Card variants
  &--hover {
    transition: transform $transition-fast, box-shadow $transition-fast;

    &:hover {
      transform: translateY(-2px);
      @include box-shadow(2);
    }
  }

  &--bordered {
    border: $border-width solid $border-color;
  }

  &--flat {
    @include box-shadow(0);
    border: $border-width solid $border-color-light;
  }

  // Card sizes
  &--sm {
    padding: $spacing-sm;
  }

  &--lg {
    padding: $spacing-xl;
  }
}

// Dashboard card (legacy classname maintained for compatibility)
.dashboard-card {
  @include card($spacing-lg, $bg-white, 1);
  @extend .card--hover;
  margin-bottom: $spacing-lg;

  h3 {
    margin-top: 0;
    margin-bottom: $spacing-sm;
    color: $text-dark;
    font-weight: $font-weight-medium;
  }

  p {
    margin-bottom: $spacing-lg;
    color: $text-light;
  }

  .button {
    margin-top: auto;
  }
}

// Dashboard grid
.dashboard-grid {
  @include grid(3, $spacing-lg);
  margin-top: $spacing-xl;

  @include respond-to(md) {
    @include grid(2, $spacing-md);
  }

  @include respond-to(sm) {
    @include grid(1, $spacing-md);
  }
}

// Detail section - a specialized card for showing details
.detail-section {
  @include card($spacing-lg, $bg-white, 1);
  margin-bottom: $spacing-xl;

  h3 {
    margin-top: 0;
    color: $text-dark;
    font-weight: $font-weight-medium;
    border-bottom: 1px solid $border-color;
    padding-bottom: $spacing-sm;
    margin-bottom: $spacing-lg;
  }
}

// Detail grid - for displaying key-value pairs
.detail-grid {
  @include grid(2, $spacing-lg);

  @include respond-to(sm) {
    @include grid(1, $spacing-md);
  }
}

// Detail item - for key-value display
.detail-item {
  @include flex(column);
  margin-bottom: $spacing-sm;
  overflow: hidden;

  .detail-label {
    font-weight: $font-weight-medium;
    color: $text-light;
    margin-bottom: $spacing-xs;
    font-size: $font-size-sm;
  }

  .detail-value {
    word-break: break-word;
    overflow-wrap: break-word;
    font-size: $font-size-base;
  }
}

// Login container
.login-container {
  max-width: 400px;
  margin: $spacing-xl auto;
  @include card($spacing-xl, $bg-white, 1);

  .login-header {
    text-align: center;
    margin-top: 0;
    margin-bottom: $spacing-lg;
    @include heading(lg, $font-weight-medium, $text-dark);
  }
}

// Login options
.login-options {
  @include flex(column);
  gap: $spacing-lg;
}

// Login option card
.login-option {
  @include card($spacing-lg, $bg-light, 1);
  text-align: center;

  h3 {
    margin: 0 0 $spacing-md;
    font-size: $font-size-lg;
    color: $text-dark;
    font-weight: $font-weight-medium;
  }

  .login-description {
    margin-bottom: $spacing-lg;
    color: $text-light;
    line-height: $line-height-base;
  }
}

// Error container
.error-container {
  @include flex(row, center, center);
  min-height: 80vh;
  padding: $spacing-xl;

  .error-content {
    @include card($spacing-xl, $bg-white, 1);
    text-align: center;
    max-width: 500px;
    width: 100%;

    h1 {
      color: $text-dark;
      margin-bottom: $spacing-lg;
      font-size: $font-size-xxl;
      font-weight: $font-weight-medium;
    }
  }

  .error-message {
    margin-bottom: $spacing-xl;
    color: $text-dark;

    p {
      margin-bottom: $spacing-md;
    }
  }

  .error-details {
    font-family: monospace;
    background: $bg-light;
    padding: $spacing-md;
    border-radius: $border-radius;
    margin-top: $spacing-md;
  }

  .retry-info {
    color: $danger-color;
    font-weight: $font-weight-bold;
  }
}
