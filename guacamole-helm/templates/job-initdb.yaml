apiVersion: batch/v1
kind: Job
metadata:
  name: guacamole-initdb-{{ .Release.Name }}
  labels:
    app: guacamole
    component: initdb
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: guacamole
        component: initdb
    spec:
      restartPolicy: Never
      securityContext:
{{- if .Values.podSecurityContext }}
{{ toYaml .Values.podSecurityContext | indent 8 }}
{{- end }}
      containers:
      - name: guacamole-init
        image: "{{ .Values.mysql.initdbImage }}"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: {{ .Values.containerSecurityContext.guacamoleUid }}
          allowPrivilegeEscalation: {{ .Values.containerSecurityContext.allowPrivilegeEscalation }}
          capabilities:
            drop:
{{ toYaml .Values.containerSecurityContext.dropCapabilities | indent 14 }}
        command: ["/bin/sh"]
        args:
          - "-c"
          - |
            echo "Initializing databases..."
            
            # Create and initialize Guacamole database
            echo "Creating Guacamole schema..."
            mysql -h mysql-{{ .Release.Name }} \
                  -u root -p"{{ .Values.mysql.rootPassword }}" \
                  -e "CREATE DATABASE IF NOT EXISTS {{ .Values.mysql.database }};"
            
            echo "Initializing Guacamole schema..."
            mysql -h mysql-{{ .Release.Name }} \
                  -u root -p"{{ .Values.mysql.rootPassword }}" \
                  {{ .Values.mysql.database }} < /docker-entrypoint-initdb.d/01-guacamole-init.sql
            
            echo "Initializing Guacamole users..."
            mysql -h mysql-{{ .Release.Name }} \
                  -u root -p"{{ .Values.mysql.rootPassword }}" \
                  {{ .Values.mysql.database }} < /docker-entrypoint-initdb.d/02-guacamole-init-users.sql
            
            # Create and initialize Desktop Manager database
            echo "Creating Desktop Manager database..."
            mysql -h mysql-{{ .Release.Name }} \
                  -u root -p"{{ .Values.mysql.rootPassword }}" \
                  -e "CREATE DATABASE IF NOT EXISTS desktop_manager;"
            
            echo "Granting privileges to guacamole user..."
            mysql -h mysql-{{ .Release.Name }} \
                  -u root -p"{{ .Values.mysql.rootPassword }}" \
                  -e "GRANT ALL PRIVILEGES ON desktop_manager.* TO '{{ .Values.mysql.user }}'@'%';"
            
            echo "Initializing Desktop Manager schema..."
            mysql -h mysql-{{ .Release.Name }} \
                  -u root -p"{{ .Values.mysql.rootPassword }}" \
                  desktop_manager < /docker-entrypoint-initdb.d/03-init.sql
            
            echo "Database initialization completed successfully!"
        volumeMounts:
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: init-scripts
        configMap:
          name: db-init-scripts-{{ .Release.Name }}
