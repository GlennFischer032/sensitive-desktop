apiVersion: apps/v1
kind: Deployment
metadata:
  name: desktop-api-{{ .Release.Name }}
  labels:
    {{- include "guacamole.labels" . | nindent 4 }}
    component: desktop-api
spec:
  replicas: {{ .Values.desktopApi.replicaCount }}
  selector:
    matchLabels:
      {{- include "desktop-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "desktop-api.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: desktop-api-{{ .Release.Name }}
      securityContext:
        {{- toYaml .Values.common.podSecurityContext | nindent 8 }}
      initContainers:
      - name: wait-for-postgres
        image: postgres:16-alpine
        command: ['sh', '-c', 'until PGPASSWORD=$POSTGRES_PASSWORD pg_isready -h {{ .Values.common.database.host }} -U $POSTGRES_USER -d $POSTGRES_DB; do echo waiting for postgres; sleep 2; done;']
        securityContext:
          {{- toYaml .Values.common.containerSecurityContext | nindent 10 }}
          runAsUser: 1000
        env:
          - name: POSTGRES_USER
            value: {{ .Values.common.database.user | quote }}
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "guacamole.fullname" . }}-credentials
                key: dbPassword
          - name: POSTGRES_DB
            value: {{ .Values.common.database.database | quote }}
      - name: wait-for-guacamole
        image: curlimages/curl:latest
        command: ['sh', '-c', 'until curl -s -f -o /dev/null http://guacamole-{{ .Release.Name }}:{{ .Values.common.ports.guacamole }}/guacamole/; do echo waiting for guacamole; sleep 2; done;']
        securityContext:
          {{- toYaml .Values.common.containerSecurityContext | nindent 10 }}
          runAsUser: 1000
      containers:
      - name: desktop-api
        image: {{ .Values.desktopApi.image }}
        imagePullPolicy: IfNotPresent
        securityContext:
          {{- toYaml .Values.common.containerSecurityContext | nindent 10 }}
          runAsUser: 1000
          runAsGroup: 1000
        env:
          # Kubernetes configuration for helm operations (in-cluster)
          - name: KUBECONFIG
            value: ""
          - name: POSTGRES_HOST
            value: {{ .Values.common.database.host | quote }}
          - name: POSTGRES_PORT
            value: {{ .Values.common.database.port | quote }}
          - name: POSTGRES_DATABASE
            value: {{ .Values.common.database.database | quote }}
          - name: POSTGRES_USER
            value: {{ .Values.common.database.user | quote }}
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "guacamole.fullname" . }}-credentials
                key: dbPassword
          - name: GUACAMOLE_URL
            value: "http://guacamole-{{ .Release.Name }}:{{ .Values.common.ports.guacamole }}/guacamole"
          - name: GUACAMOLE_JSON_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "guacamole.fullname" . }}-credentials
                key: guacamoleJsonSecretKey
          - name: EXTERNAL_GUACAMOLE_URL
            value: {{ printf "https://%s/guacamole" (include "guacamole.hostname" .) | quote }}
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "guacamole.fullname" . }}-credentials
                key: desktopApiSecretKey
          - name: ENCRYPTION_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "guacamole.fullname" . }}-credentials
                key: encryptionKey
          - name: ADMIN_OIDC_SUB
            value: {{ .Values.common.credentials.desktopAdmin.oidcSub | quote }}
          - name: RANCHER_API_URL
            value: {{ .Values.common.rancher.apiUrl | quote }}
          - name: RANCHER_CLUSTER_ID
            value: {{ .Values.common.rancher.clusterId | quote }}
          - name: RANCHER_REPO_NAME
            value: {{ .Values.common.rancher.repoName | quote }}
          - name: NAMESPACE
            value: {{ .Values.common.rancher.namespace | quote }}
          - name: GUACAMOLE_RELEASE_NAME
            value: {{ .Release.Name | quote }}
          - name: FLASK_APP
            value: "app.py"
          - name: FLASK_ENV
            value: "production"
          - name: PYTHONUNBUFFERED
            value: "1"
          # OIDC Configuration
          - name: OIDC_PROVIDER_URL
            value: {{ .Values.common.oidc.providerUrl | quote }}
          - name: OIDC_CLIENT_ID
            value: {{ .Values.common.oidc.clientId | quote }}
          - name: OIDC_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "guacamole.fullname" . }}-credentials
                key: oidcClientSecret
          - name: OIDC_CALLBACK_URL
            value: {{ .Values.common.oidc.redirectUri | quote }}
          - name: RANCHER_API_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "guacamole.fullname" . }}-credentials
                key: rancherToken
          - name: CORS_ALLOWED_ORIGINS
            value: {{ printf "http://desktop-frontend-%s:%s,%s" .Release.Name (.Values.common.ports.frontend | toString) .Values.common.oidc.frontendUrl | quote }}
        ports:
        - containerPort: {{ .Values.desktopApi.containerPort }}
          name: http
        {{- if .Values.desktopApi.healthcheck.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.desktopApi.healthcheck.path }}
            port: http
          initialDelaySeconds: {{ .Values.desktopApi.healthcheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.desktopApi.healthcheck.periodSeconds }}
          timeoutSeconds: {{ .Values.desktopApi.healthcheck.timeoutSeconds }}
          failureThreshold: {{ .Values.desktopApi.healthcheck.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.desktopApi.healthcheck.path }}
            port: http
          initialDelaySeconds: {{ .Values.desktopApi.healthcheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.desktopApi.healthcheck.periodSeconds }}
          timeoutSeconds: {{ .Values.desktopApi.healthcheck.timeoutSeconds }}
          failureThreshold: {{ .Values.desktopApi.healthcheck.failureThreshold }}
        {{- end }}
