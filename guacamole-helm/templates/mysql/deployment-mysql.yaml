apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-{{ .Release.Name }}
  labels:
    {{- include "guacamole.labels" . | nindent 4 }}
    component: mysql
spec:
  replicas: 1  # MySQL should be a single instance
  selector:
    matchLabels:
      {{- include "guacamole.selectorLabels" . | nindent 6 }}
      component: mysql
  template:
    metadata:
      labels:
        {{- include "guacamole.selectorLabels" . | nindent 8 }}
        component: mysql
    spec:
      securityContext:
        {{- toYaml .Values.common.podSecurityContext | nindent 8 }}
      containers:
      - name: mysql
        image: "{{ .Values.mysql.image }}"
        imagePullPolicy: IfNotPresent
        args:
        {{- range .Values.mysql.args }}
          - {{ . | quote }}
        {{- end }}
        securityContext:
          {{- toYaml .Values.common.containerSecurityContext | nindent 10 }}
          runAsUser: 1000
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: {{ .Values.common.database.password | quote }}
          - name: MYSQL_DATABASE
            value: {{ .Values.common.database.guacamoleDb | quote }}
          - name: MYSQL_USER
            value: {{ .Values.common.database.user | quote }}
          - name: MYSQL_PASSWORD
            value: {{ .Values.common.database.password | quote }}
        ports:
        - name: mysql
          containerPort: {{ .Values.common.ports.mysql }}
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        {{- if .Values.mysql.healthcheck.enabled }}
        livenessProbe:
          exec:
            command:
              - mysqladmin
              - ping
              - -h
              - localhost
              - -u
              - root
              - -p{{ .Values.common.database.password }}
          initialDelaySeconds: {{ .Values.mysql.healthcheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.mysql.healthcheck.periodSeconds }}
          timeoutSeconds: {{ .Values.mysql.healthcheck.timeoutSeconds }}
          failureThreshold: {{ .Values.mysql.healthcheck.failureThreshold }}
        readinessProbe:
          exec:
            command:
              - mysqladmin
              - ping
              - -h
              - localhost
              - -u
              - root
              - -p{{ .Values.common.database.password }}
          initialDelaySeconds: {{ .Values.mysql.healthcheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.mysql.healthcheck.periodSeconds }}
          timeoutSeconds: {{ .Values.mysql.healthcheck.timeoutSeconds }}
          failureThreshold: {{ .Values.mysql.healthcheck.failureThreshold }}
        {{- end }}
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-data-{{ .Release.Name }}
