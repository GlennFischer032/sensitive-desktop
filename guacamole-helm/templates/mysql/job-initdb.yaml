apiVersion: batch/v1
kind: Job
metadata:
  name: mysql-initdb-{{ .Release.Name }}
  labels:
    {{- include "guacamole.labels" . | nindent 4 }}
    component: mysql-init
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "guacamole.selectorLabels" . | nindent 8 }}
        component: mysql-init
    spec:
      restartPolicy: OnFailure
      securityContext:
        {{- toYaml .Values.common.podSecurityContext | nindent 8 }}
      initContainers:
      - name: wait-for-mysql
        image: mysql:8.0
        command: ['sh', '-c', 'until mysqladmin ping -h {{ .Values.common.database.host }} -u root -p{{ .Values.common.database.password }}; do echo waiting for mysql; sleep 2; done;']
        securityContext:
          {{- toYaml .Values.common.containerSecurityContext | nindent 10 }}
          runAsUser: 1000
      containers:
      - name: init-mysql
        image: {{ .Values.mysql.initdbImage }}
        imagePullPolicy: IfNotPresent
        securityContext:
          {{- toYaml .Values.common.containerSecurityContext | nindent 10 }}
          runAsUser: 1000
        env:
          - name: MYSQL_HOST
            value: {{ .Values.common.database.host }}
          - name: MYSQL_PORT
            value: {{ .Values.common.ports.mysql | quote }}
          - name: MYSQL_DATABASE
            value: {{ .Values.common.database.guacamoleDb }}
          - name: MYSQL_USER
            value: {{ .Values.common.database.user }}
          - name: MYSQL_PASSWORD
            value: {{ .Values.common.database.password }}
          - name: MYSQL_ROOT_PASSWORD
            value: {{ .Values.common.database.password }}
          - name: DESKTOP_DB
            value: {{ .Values.common.database.desktopDb }}
        command: ["/bin/sh"]
        args:
          - "-c"
          - |
            echo "Initializing databases..."

            # Create and initialize Guacamole database
            echo "Creating Guacamole schema..."
            mysql -h {{ .Values.common.database.host }} \
                  -u root -p{{ .Values.common.database.password }} \
                  -e "CREATE DATABASE IF NOT EXISTS {{ .Values.common.database.guacamoleDb }};"

            echo "Initializing Guacamole schema..."
            mysql -h {{ .Values.common.database.host }} \
                  -u root -p{{ .Values.common.database.password }} \
                  {{ .Values.common.database.guacamoleDb }} < /docker-entrypoint-initdb.d/01-guacamole-init.sql

            echo "Initializing Guacamole users..."
            mysql -h {{ .Values.common.database.host }} \
                  -u root -p{{ .Values.common.database.password }} \
                  {{ .Values.common.database.guacamoleDb }} < /docker-entrypoint-initdb.d/02-guacamole-init-users.sql

            # Create and initialize Desktop Manager database
            echo "Creating Desktop Manager database..."
            mysql -h {{ .Values.common.database.host }} \
                  -u root -p{{ .Values.common.database.password }} \
                  -e "CREATE DATABASE IF NOT EXISTS {{ .Values.common.database.desktopDb }};"

            echo "Granting privileges to guacamole user..."
            mysql -h {{ .Values.common.database.host }} \
                  -u root -p{{ .Values.common.database.password }} \
                  -e "GRANT ALL PRIVILEGES ON {{ .Values.common.database.desktopDb }}.* TO '{{ .Values.common.database.user }}'@'%';"

            echo "Initializing Desktop Manager schema..."
            mysql -h {{ .Values.common.database.host }} \
                  -u root -p{{ .Values.common.database.password }} \
                  {{ .Values.common.database.desktopDb }} < /docker-entrypoint-initdb.d/03-init.sql

            echo "Database initialization completed successfully!"
        volumeMounts:
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: init-scripts
        configMap:
          name: mysql-init-scripts-{{ .Release.Name }}
