apiVersion: batch/v1
kind: Job
metadata:
  name: postgres-init-job
  labels:
    {{- include "guacamole.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: postgres-init-job
      labels:
        {{- include "guacamole.labels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.common.podSecurityContext | nindent 8 }}
      restartPolicy: OnFailure
      initContainers:
      - name: wait-for-postgres
        image: postgres:16-alpine
        command: ['sh', '-c', 'until pg_isready -h postgres-guacamole -p {{ .Values.common.ports.postgres }} -U {{ .Values.common.database.user }}; do echo waiting for postgres; sleep 2; done;']
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        env:
        - name: PGPASSWORD
          value: {{ .Values.common.database.password }}
      containers:
      - name: init-postgres
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        image: {{ .Values.postgres.initdbImage }}
        imagePullPolicy: Always
        command: ["/bin/bash", "-c"]
        args:
        - |
          set -e
          echo "Initializing PostgreSQL database..."

          # Wait for PostgreSQL to be ready
          until PGPASSWORD=${POSTGRES_PASSWORD} psql -h postgres-guacamole -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c '\q'; do
            echo "PostgreSQL is unavailable - sleeping"
            sleep 2
          done

          echo "PostgreSQL is up - executing initialization scripts"

          # Execute initialization scripts
          for f in /docker-entrypoint-initdb.d/*.sql; do
            echo "Running $f"
            PGPASSWORD=${POSTGRES_PASSWORD} psql -h postgres-guacamole -U ${POSTGRES_USER} -d ${POSTGRES_DB} -f "$f"
          done

          echo "Database initialization completed successfully"
        env:
        - name: POSTGRES_USER
          value: {{ .Values.common.database.user }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.common.database.password }}
        - name: POSTGRES_DB
          value: {{ .Values.common.database.database }}
