apiVersion: apps/v1
kind: Deployment
metadata:
  name: desktop-api-{{ .Release.Name }}
  labels:
    {{- include "guacamole.labels" . | nindent 4 }}
    component: desktop-api
spec:
  replicas: {{ .Values.desktopApi.replicaCount }}
  selector:
    matchLabels:
      {{- include "desktop-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "desktop-api.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.common.podSecurityContext | nindent 8 }}
      initContainers:
      - name: wait-for-mysql
        image: mysql:8.0
        command: ['sh', '-c', 'until mysqladmin ping -h {{ .Values.common.database.host }} -u root -p{{ .Values.common.database.password }}; do echo waiting for mysql; sleep 2; done;']
        securityContext:
          {{- toYaml .Values.common.containerSecurityContext | nindent 10 }}
          runAsUser: 1000
      - name: wait-for-guacamole
        image: curlimages/curl:latest
        command: ['sh', '-c', 'until curl -s -f -o /dev/null http://guacamole-{{ .Release.Name }}:{{ .Values.common.ports.guacamole }}/guacamole/; do echo waiting for guacamole; sleep 2; done;']
        securityContext:
          {{- toYaml .Values.common.containerSecurityContext | nindent 10 }}
          runAsUser: 1000
      containers:
      - name: desktop-api
        image: {{ .Values.desktopApi.image }}
        imagePullPolicy: IfNotPresent
        securityContext:
          {{- toYaml .Values.common.containerSecurityContext | nindent 10 }}
          runAsUser: 1000
          runAsGroup: 1000
        env:
          - name: MYSQL_HOST
            value: {{ .Values.common.database.host | quote }}
          - name: MYSQL_PORT
            value: {{ .Values.common.database.port | quote }}
          - name: MYSQL_DATABASE
            value: {{ .Values.common.database.desktopDb | quote }}
          - name: MYSQL_USER
            value: {{ .Values.common.database.user | quote }}
          - name: MYSQL_PASSWORD
            value: {{ .Values.common.database.password | quote }}
          - name: GUACAMOLE_API_URL
            value: "http://guacamole-{{ .Release.Name }}/guacamole/api"
          - name: GUACAMOLE_USERNAME
            value: {{ .Values.common.credentials.guacamoleAdmin.username | quote }}
          - name: GUACAMOLE_PASSWORD
            value: {{ .Values.common.credentials.guacamoleAdmin.password | quote }}
          - name: SECRET_KEY
            value: {{ .Values.common.credentials.secretKey | quote }}
          - name: ADMIN_USERNAME
            value: {{ .Values.common.credentials.desktopAdmin.username | quote }}
          - name: ADMIN_PASSWORD
            value: {{ .Values.common.credentials.desktopAdmin.password | quote }}
          - name: RANCHER_API_URL
            value: {{ .Values.common.rancher.apiUrl | quote }}
          - name: RANCHER_CLUSTER_ID
            value: {{ .Values.common.rancher.clusterId | quote }}
          - name: RANCHER_REPO_NAME
            value: {{ .Values.common.rancher.repoName | quote }}
          - name: NAMESPACE
            value: {{ .Release.Namespace | quote }}
          - name: FLASK_APP
            value: "app.py"
          - name: FLASK_ENV
            value: "production"
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: RANCHER_API_TOKEN
            valueFrom:
              secretKeyRef:
                name: desktop-api-{{ $.Release.Name }}
                key: rancher-token
        ports:
        - containerPort: {{ .Values.desktopApi.containerPort }}
          name: http
        {{- if .Values.desktopApi.healthcheck.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.desktopApi.healthcheck.path }}
            port: http
          initialDelaySeconds: {{ .Values.desktopApi.healthcheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.desktopApi.healthcheck.periodSeconds }}
          timeoutSeconds: {{ .Values.desktopApi.healthcheck.timeoutSeconds }}
          failureThreshold: {{ .Values.desktopApi.healthcheck.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.desktopApi.healthcheck.path }}
            port: http
          initialDelaySeconds: {{ .Values.desktopApi.healthcheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.desktopApi.healthcheck.periodSeconds }}
          timeoutSeconds: {{ .Values.desktopApi.healthcheck.timeoutSeconds }}
          failureThreshold: {{ .Values.desktopApi.healthcheck.failureThreshold }}
        {{- end }}
